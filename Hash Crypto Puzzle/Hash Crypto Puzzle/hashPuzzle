# Import necessary libraries
import hashlib
import time
import random
import matplotlib.pyplot as plt

# Function to solve the crypto puzzle
def solve_puzzle(B, N):
    # Initialize list to store times
    times = []
    # Run N trials
    for _ in range(N):
        # Generate random puzzle P of B bits
        P = random.getrandbits(B)
        # Start timer
        start = time.time()
        # Loop until solution is found
        while True:
            # Generate random message M of 256 bits
            M = random.getrandbits(256)
            # Compute SHA-256 hash of M
            hash = int(hashlib.sha256(str(M).encode()).hexdigest(), 16)
            # Check if last B bits of hash match P
            if hash & ((1 << B) - 1) == P:
                break
        # Stop timer
        end = time.time()
        # Add elapsed time to list
        times.append(end - start)
    # Return average time over all trials
    return sum(times) / N

# List of B values to test
Bs = [4, 8, 12, 16]
# Compute average time for each B
times = [solve_puzzle(B, 100) for B in Bs]
# Print results
for B, averageTime in zip(Bs, times):
    print(f'Average time for B = {B}: {averageTime:.6f}s')

# Plot results
plt.plot(Bs, times, marker='o')
plt.xlabel('B')
plt.ylabel('Average Time to Solve (s)')
plt.title('Average Time to Solve vs B')
plt.grid(True)
plt.show()